# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-28 21:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import realestate.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('photo', models.ImageField(blank=True, help_text='Upload photo', null=True, upload_to='gallery/user/photo/%Y/%m/%d')),
                ('address', models.TextField(blank=True, null=True)),
                ('phone1', models.CharField(blank=True, max_length=15, null=True)),
                ('phone2', models.CharField(blank=True, max_length=15, null=True)),
                ('user', models.ForeignKey(on_delete=models.SET(realestate.models.get_sentinel_user), related_name='agent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Property Agent',
                'verbose_name_plural': 'Agents',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('cover', models.ImageField(blank=True, help_text='Optional cover for property', null=True, upload_to=realestate.models.get_image_filename)),
                ('owner', models.CharField(max_length=100)),
                ('desc', models.TextField(blank=True, null=True)),
                ('other_details', models.TextField(blank=True, null=True)),
                ('address', models.TextField()),
                ('room_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('vendor_requested_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('buyer_offered_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('agreed_selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('keywords', models.CharField(blank=True, help_text='Keywords sparate by comma.', max_length=200, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('publish', models.BooleanField(default=True)),
                ('agent', models.ForeignKey(on_delete=models.SET(realestate.models.get_sentinel_user), related_name='property_agent', to='realestate.Agent')),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'Detail Property',
                'verbose_name_plural': 'Property',
            },
        ),
        migrations.CreateModel(
            name='Property_Ref',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to=realestate.models.get_image_filename, verbose_name='Image')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_ref', to='realestate.Property')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Property_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('type_desc', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Detail Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('ip', models.CharField(max_length=40)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_visitor', to='realestate.Property')),
            ],
            options={
                'ordering': ['-created'],
                'verbose_name': 'Property Visitor',
                'verbose_name_plural': 'Visitors',
            },
        ),
        migrations.AddField(
            model_name='property',
            name='tags',
            field=models.ManyToManyField(to='realestate.Tag'),
        ),
        migrations.AddField(
            model_name='property',
            name='type',
            field=models.ForeignKey(on_delete=models.SET(realestate.models.get_sentinel_user), related_name='ref_prop_type', to='realestate.Property_Type'),
        ),
    ]
